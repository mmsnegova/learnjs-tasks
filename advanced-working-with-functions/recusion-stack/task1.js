/* Вычислить сумму чисел до данного
важность: 5
Напишите функцию sumTo(n), которая вычисляет сумму чисел 1 + 2 + ... + n.

Например:

sumTo(1) = 1
sumTo(2) = 2 + 1 = 3
sumTo(3) = 3 + 2 + 1 = 6
sumTo(4) = 4 + 3 + 2 + 1 = 10
...
sumTo(100) = 100 + 99 + ... + 2 + 1 = 5050
Сделайте три варианта решения:

С использованием цикла.
Через рекурсию, т.к. sumTo(n) = n + sumTo(n-1) for n > 1.
С использованием формулы арифметической прогрессии.
P.S. Какой вариант решения самый быстрый? Самый медленный? Почему?

P.P.S. Можно ли при помощи рекурсии посчитать sumTo(100000)? - все зависит от интерпретатора JS
для большинства из них 100 000 рекурсивных вызовов за пределами возможностей, поэтому нет
 */

//цикл - второй по скорости, нужно использовать n операций сложения
/* function sumTo(n) {
  let result = 0;

  for (let i = 1; i <= n; i++) {
    result += i;
  }

  return result;
} */

//рекурсия - самый медленный по скорости, так дополнительно к опреациям сложения требуется сохранение в стек контекста выполнения
/* function sumTo(n) {
  if (n == 1) {
    return n;
  } else {
    return n + sumTo(n - 1);
  }
} */

//использование формулы арифметической прогрессии - самый быстрый вариант, здесь всего три операции
function sumTo(n) {
  return ((1 + n) / 2) * n;
}

console.log(sumTo(10));
